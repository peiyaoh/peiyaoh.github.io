{"version":3,"sources":["webpack:///./src/templates/project-details.js"],"names":["post","data","markdownRemark","projectInfo","projectInfoList","filter","pub","project_tag","frontmatter","keyword_list","concat","role_list","method_list","skill_list","topic_list","collaborator_list","title","keywords","className","undefined","introduction","join","length","map","topic","indexT","key","summary","comment_list","comment","index","dangerouslySetInnerHTML","__html","html","publicationInfoList","tags","indexOf","name","projectTag","query"],"mappings":"8FAAA,8IAmBe,sBAAe,IACtBA,EADqB,EAAXC,KACEC,eAEdC,EAAcC,IAAgBC,QAAO,SAACC,GAAU,OAAOA,EAAIC,aAAeP,EAAKQ,YAAYD,eAAgB,GAiB3GE,EAXqB,CAAC,eAAgB,6BAA8B,MAAO,kBAAmB,KAAM,YAWlEC,OAAOP,EAAYQ,WAAWD,OAAOP,EAAYS,aAAaF,OAAOP,EAAYU,YAAYH,OAAOP,EAAYW,YAAYJ,OAAOP,EAAYY,mBAGrL,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKC,MAAOb,EAAYa,MAAOC,SAAUR,IACzC,6BACE,wBAAIS,UAAU,8BAA8Bf,EAAYa,OACxD,6BACA,yBAAKE,UAAU,8BACgBC,MAA5BhB,EAAYiB,aACb,yBAAKF,UAAU,QACZf,EAAYiB,aAAa,8BAE1B,KAEF,yBAAKF,UAAU,OACb,yBAAKA,UAAU,iBACf,0CACEf,EAAYQ,UAAUU,KAAK,OAG7B,2BACElB,EAAYY,kBAAkBO,OAAS,EAAI,kBAAC,WAAD,yBAEvCnB,EAAYY,kBAAkBM,KAAK,OAEzB,OAIlB,6BACA,yBAAKH,UAAU,WACb,yBAAKA,UAAU,UAAf,aAEE,yBAAKA,UAAU,QAEXf,EAAYS,YAAYW,KAAI,SAACC,EAAOC,GAClC,OAAO,0BAAMP,UAAU,gBAAgBQ,IAAKD,GAASD,QAO7D,yBAAKN,UAAU,UAAf,YACA,yBAAKA,UAAU,QAETf,EAAYU,WAAWU,KAAI,SAACC,EAAOC,GACjC,OAAO,0BAAMP,UAAU,gBAAgBQ,IAAKD,GAASD,UAO/D,6BAAMrB,EAAYwB,SAClB,6BAG8BR,MAA5BhB,EAAYyB,aAA4BzB,EAAYyB,aAAaL,KAAI,SAACM,EAASC,GAAY,OAAO,uBAAGJ,IAAKI,GAAQD,MAAkB,MAGxI,yBAAKE,wBAAyB,CAAEC,OAAQhC,EAAKiC,SAG7CC,IAAoB7B,QAAO,SAACC,GAAU,OAAOA,EAAI6B,KAAKC,QAAQpC,EAAKQ,YAAYD,cAAgB,KAAMe,OAAS,EAC5G,kBAAC,WAAD,KACE,wBAAIJ,UAAU,8BAA8BmB,KAAK,gBAAjD,gBACA,kBAAC,IAAD,CAAsBC,WAAYtC,EAAKQ,YAAYD,eACvC,KAElB,+BAKC,IAAMgC,EAAK","file":"component---src-templates-project-details-js-d55c12fee2528f4476a1.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link } from \"gatsby\"\nimport PublicationSelection from \"../components/publication-selection\";\nimport { publicationInfoList } from \"../contents/publication-info\";\nimport { projectInfoList } from \"../contents/project-info\";\n\nlet bulmaCarouselScript = `<script>\nbulmaCarousel.attach('#carousel-demo', {\n    slidesToScroll: 4,\n    slidesToShow: 4\n});\n</script>`;\n\n\n\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n\n  let projectInfo = projectInfoList.filter((pub) => { return pub.project_tag == post.frontmatter.project_tag; })[0];\n\n  //<div className=\"is-size-4\">Summary</div>\n\n  // <SEO title={post.frontmatter.title} keywords={post.frontmatter.keywords} />\n\n  let basic_keyword_list = [\"Pei-Yao Hung\", \"Human-Computer Interaction\", \"HCI\", \"user experience\", \"UX\", \"research\"];\n\n  /*\n  role_list\n  collaborator_list\n  method_list\n  skill_ist\n  topic_list\n  */\n\n\n  let keyword_list = basic_keyword_list.concat(projectInfo.role_list).concat(projectInfo.method_list).concat(projectInfo.skill_list).concat(projectInfo.topic_list).concat(projectInfo.collaborator_list);\n\n\n  return (\n    <Layout>\n\n      <SEO title={projectInfo.title} keywords={keyword_list} />\n      <div>\n        <h1 className=\"is-size-3 is-size-4-mobile\">{projectInfo.title}</h1>\n        <hr />\n        <div className=\"content has-text-justified\">\n          {projectInfo.introduction != undefined? \n          <div className=\"hero\">\n            {projectInfo.introduction}<br />\n          </div>\n          : null}\n          \n          <div className=\"box\">\n            <div className=\"has-text-left\">\n            <p>My role(s): {\n              projectInfo.role_list.join(\", \")\n            }\n            </p>\n            <p>{\n              projectInfo.collaborator_list.length > 0 ? <Fragment>\n                Collaborator(s): {\n                  projectInfo.collaborator_list.join(\", \")\n                }\n              </Fragment> : null\n            }\n            </p>\n            </div>\n          <hr />\n          <div className=\"columns\">\n            <div className=\"column\">Method(s):\n\n              <div className=\"tags\">\n                {\n                  projectInfo.method_list.map((topic, indexT) => {\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                  })\n                }\n              </div>\n\n\n            </div>\n            <div className=\"column\">Skill(s):\n            <div className=\"tags\">\n                {\n                  projectInfo.skill_list.map((topic, indexT) => {\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                  })\n                }\n              </div>\n            </div>\n          </div>\n          </div>\n          <div>{projectInfo.summary}</div>\n          <br />\n\n          {\n            projectInfo.comment_list != undefined ? projectInfo.comment_list.map((comment, index) => { return <p key={index}>{comment}</p> }) : null\n          }\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n      {\n        publicationInfoList.filter((pub) => { return pub.tags.indexOf(post.frontmatter.project_tag) >= 0; }).length > 0 ?\n          <Fragment>\n            <h3 className=\"is-size-5  is-size-6-mobile\" name=\"publications\">Publications</h3>\n            <PublicationSelection projectTag={post.frontmatter.project_tag}></PublicationSelection>\n          </Fragment> : null\n      }\n      <br />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        keywords\n        project_tag\n      }\n    }\n  }\n`\n\n\n\n\n/*\n{\n              projectInfo.skill_list.join(\", \")\n            }\n{\n  projectInfo.method_list.join(\", \")\n}\n*/"],"sourceRoot":""}