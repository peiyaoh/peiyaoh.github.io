{"version":3,"sources":["webpack:///./src/components/publication-selection.js","webpack:///./src/templates/project-details.js"],"names":["PublicationSelection","projectTag","className","publicationInfoList","filter","pub","tags","indexOf","sort","pubA","pubB","year","map","publication","index","key","text","links","item","indexI","link","href","target","rel","label","post","data","markdownRemark","projectInfo","projectInfoList","project_tag","frontmatter","keyword_list","concat","role_list","method_list","skill_list","topic_list","collaborator_list","title","keywords","undefined","introduction","join","length","topic","indexT","summary","comment_list","comment","dangerouslySetInnerHTML","__html","html","name","style","height","query"],"mappings":"8FAAA,iDA+BeA,IA3Bc,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAF,OACzB,yBAAKC,UAAU,WACX,yBAAKA,UAAU,8BAEPC,IAAoBC,QAAO,SAACC,GAAS,OAAOA,EAAIC,KAAKC,QAAQN,IAAe,KAAKO,MAAK,SAACC,EAAMC,GAAU,OAAOA,EAAKC,KAAOF,EAAKE,QAAQC,KAAI,SAACC,EAAaC,GACrJ,OAAO,uBAAGC,IAAKD,GACVD,EAAYG,KADV,KAEH,kBAAC,WAAD,KAEQH,EAAYI,MAAML,KAAI,SAACM,EAAMC,GACzB,OAAO,kBAAC,WAAD,CAAUJ,IAAKI,GAElBD,EAAKE,KAAKb,QAAQ,SAAW,EAAI,kBAAC,WAAD,KAAU,uBAAGc,KAAMH,EAAKE,KAAME,OAAO,SAASC,IAAI,uBAAuBL,EAAKM,QAC/G,kBAAC,WAAD,SAAW,uBAAGH,KAAMH,EAAKE,KAAME,OAAO,SAASC,IAAI,uBAAuBL,EAAKM,OAA/E,kB,oCCjBxC,8IAmBe,sBAAe,IACtBC,EADqB,EAAXC,KACEC,eAEdC,EAAcC,IAAgBzB,QAAO,SAACC,GAAU,OAAOA,EAAIyB,aAAeL,EAAKM,YAAYD,eAAgB,GAiB3GE,EAXqB,CAAC,eAAgB,6BAA8B,MAAO,kBAAmB,KAAM,YAWlEC,OAAOL,EAAYM,WAAWD,OAAOL,EAAYO,aAAaF,OAAOL,EAAYQ,YAAYH,OAAOL,EAAYS,YAAYJ,OAAOL,EAAYU,mBAGrL,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKC,MAAOX,EAAYW,MAAOC,SAAUR,IACzC,6BACE,wBAAI9B,UAAU,8BAA8B0B,EAAYW,OACxD,6BACA,yBAAKrC,UAAU,8BACgBuC,MAA5Bb,EAAYc,aACb,yBAAKxC,UAAU,QACZ0B,EAAYc,aAAa,8BAE1B,KAEF,yBAAKxC,UAAU,OACb,yBAAKA,UAAU,iBACf,0CACE0B,EAAYM,UAAUS,KAAK,OAG7B,2BACEf,EAAYU,kBAAkBM,OAAS,EAAI,kBAAC,WAAD,yBAEvChB,EAAYU,kBAAkBK,KAAK,OAEzB,OAIlB,6BACA,yBAAKzC,UAAU,WACb,yBAAKA,UAAU,UAAf,aAEE,yBAAKA,UAAU,QAEX0B,EAAYO,YAAYvB,KAAI,SAACiC,EAAOC,GAClC,OAAO,0BAAM5C,UAAU,gBAAgBa,IAAK+B,GAASD,QAO7D,yBAAK3C,UAAU,UAAf,YACA,yBAAKA,UAAU,QAET0B,EAAYQ,WAAWxB,KAAI,SAACiC,EAAOC,GACjC,OAAO,0BAAM5C,UAAU,gBAAgBa,IAAK+B,GAASD,UAO/D,6BAAMjB,EAAYmB,SAClB,6BAG8BN,MAA5Bb,EAAYoB,aAA4BpB,EAAYoB,aAAapC,KAAI,SAACqC,EAASnC,GAAY,OAAO,uBAAGC,IAAKD,GAAQmC,MAAkB,MAGxI,yBAAKC,wBAAyB,CAAEC,OAAQ1B,EAAK2B,SAG7CjD,IAAoBC,QAAO,SAACC,GAAU,OAAOA,EAAIC,KAAKC,QAAQkB,EAAKM,YAAYD,cAAgB,KAAMc,OAAS,EAC5G,kBAAC,WAAD,KACE,wBAAI1C,UAAU,8BAA8BmD,KAAK,gBAAjD,gBACA,yBAAKC,MAAO,CAACC,OAAQ,MACrB,kBAAC,IAAD,CAAsBtD,WAAYwB,EAAKM,YAAYD,eACvC,KAElB,+BAKC,IAAM0B,EAAK","file":"component---src-templates-project-details-js-52424bdff845540938f0.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport {publicationInfoList} from \"../contents/publication-info\";\n\nconst PublicationSelection = ({projectTag}) => (\n    <div className=\"content\">\n        <div className=\"content has-text-justified\">\n        {\n                publicationInfoList.filter((pub) => {return pub.tags.indexOf(projectTag) >= 0;}).sort((pubA, pubB) => {return pubB.year - pubA.year;}).map((publication, index) => {\n                    return <p key={index}>\n                        {publication.text}.&nbsp;\n                        <Fragment>\n                            {\n                                publication.links.map((item, indexI) => {\n                                    return <Fragment key={indexI}>\n                                    {\n                                        item.link.indexOf(\".pdf\") >= 0 ? <Fragment><a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a></Fragment> :\n                                        <Fragment>[<a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a>]</Fragment>\n                                    } \n                                    </Fragment>\n                                })\n                            }\n                        </Fragment>\n                    </p>\n                })\n            }\n\n        </div>\n    </div>\n)\n\nexport default PublicationSelection","import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link } from \"gatsby\"\nimport PublicationSelection from \"../components/publication-selection\";\nimport { publicationInfoList } from \"../contents/publication-info\";\nimport { projectInfoList } from \"../contents/project-info\";\n\nlet bulmaCarouselScript = `<script>\nbulmaCarousel.attach('#carousel-demo', {\n    slidesToScroll: 4,\n    slidesToShow: 4\n});\n</script>`;\n\n\n\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n\n  let projectInfo = projectInfoList.filter((pub) => { return pub.project_tag == post.frontmatter.project_tag; })[0];\n\n  //<div className=\"is-size-4\">Summary</div>\n\n  // <SEO title={post.frontmatter.title} keywords={post.frontmatter.keywords} />\n\n  let basic_keyword_list = [\"Pei-Yao Hung\", \"Human-Computer Interaction\", \"HCI\", \"user experience\", \"UX\", \"research\"];\n\n  /*\n  role_list\n  collaborator_list\n  method_list\n  skill_ist\n  topic_list\n  */\n\n\n  let keyword_list = basic_keyword_list.concat(projectInfo.role_list).concat(projectInfo.method_list).concat(projectInfo.skill_list).concat(projectInfo.topic_list).concat(projectInfo.collaborator_list);\n\n\n  return (\n    <Layout>\n\n      <SEO title={projectInfo.title} keywords={keyword_list} />\n      <div>\n        <h1 className=\"is-size-3 is-size-4-mobile\">{projectInfo.title}</h1>\n        <hr />\n        <div className=\"content has-text-justified\">\n          {projectInfo.introduction != undefined? \n          <div className=\"hero\">\n            {projectInfo.introduction}<br />\n          </div>\n          : null}\n          \n          <div className=\"box\">\n            <div className=\"has-text-left\">\n            <p>My role(s): {\n              projectInfo.role_list.join(\", \")\n            }\n            </p>\n            <p>{\n              projectInfo.collaborator_list.length > 0 ? <Fragment>\n                Collaborator(s): {\n                  projectInfo.collaborator_list.join(\", \")\n                }\n              </Fragment> : null\n            }\n            </p>\n            </div>\n          <hr />\n          <div className=\"columns\">\n            <div className=\"column\">Method(s):\n\n              <div className=\"tags\">\n                {\n                  projectInfo.method_list.map((topic, indexT) => {\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                  })\n                }\n              </div>\n\n\n            </div>\n            <div className=\"column\">Skill(s):\n            <div className=\"tags\">\n                {\n                  projectInfo.skill_list.map((topic, indexT) => {\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                  })\n                }\n              </div>\n            </div>\n          </div>\n          </div>\n          <div>{projectInfo.summary}</div>\n          <br />\n\n          {\n            projectInfo.comment_list != undefined ? projectInfo.comment_list.map((comment, index) => { return <p key={index}>{comment}</p> }) : null\n          }\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n      {\n        publicationInfoList.filter((pub) => { return pub.tags.indexOf(post.frontmatter.project_tag) >= 0; }).length > 0 ?\n          <Fragment>\n            <h3 className=\"is-size-4  is-size-5-mobile\" name=\"publications\">Publications</h3>\n            <div style={{height: 20}}></div>\n            <PublicationSelection projectTag={post.frontmatter.project_tag}></PublicationSelection>\n          </Fragment> : null\n      }\n      <br />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        keywords\n        project_tag\n      }\n    }\n  }\n`\n\n\n\n\n/*\n{\n              projectInfo.skill_list.join(\", \")\n            }\n{\n  projectInfo.method_list.join(\", \")\n}\n*/"],"sourceRoot":""}