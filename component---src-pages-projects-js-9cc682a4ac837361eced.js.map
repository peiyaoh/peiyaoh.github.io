{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/navigation.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/project-selection.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_project_selection__WEBPACK_IMPORTED_MODULE_4__","descriptionText","a","createElement","className","Projects","title","keywords","description","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","ListLink","react_default","style","display","marginRight","gatsby_browser_entry","to","Navigation","listStyle","float","navigation_ListLink","Header","siteTitle","marginBottom","margin","maxWidth","padding","src","href","target","navigation","Layout","Fragment","header","paddingTop","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","ProjectSelection","undefined","react__WEBPACK_IMPORTED_MODULE_1__","projectInfoList","map","projectInfo","index","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","details_link","width","height","image_info","link","topic_list","topic","indexT"],"mappings":"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","file":"component---src-pages-projects-js-9cc682a4ac837361eced.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link } from \"gatsby\"\nimport ProjectSelection from \"../components/project-selection\";\n\n// with domain experts such as \n\nlet descriptionText = <div>\n    <p>Here is a list of projects I have worked on for courses, independent ideas, competitions, and research investigation. I am privileged to have <span className=\"has-text-weight-semibold\">collaborated with software developers, visual designers, occupational therapists, public health researchers, physicians, caregivers, and patients</span>, to co-create better user experience.\n    </p>\n</div>;\n\n\n\nconst Projects = () => (\n    <Layout>\n        <SEO title=\"Pei-Yao Hung | Projects\" keywords={[`Pei-Yao Hung`, `Human-Computer Interaction`, `User Experience`, `Researcher`, `Project`]} />\n        <div className=\"title is-3 is-spaced is-size-4-mobile\">Projects</div>\n        <ProjectSelection description={descriptionText} />\n    </Layout>\n)\n\nexport default Projects\n/*\n<div className=\"is-size-4\">Approach: Research, Design, Build, and Evaluate</div>\n    <p>\n        I strive for better user experience through research, design, development, and evaluation. I employ different methods to study human experience in both digital and physical environments. I then design, build, and evaluate interactive systems on desktop, mobile, and web platforms to explore the potentials of interactive systems to make people's everyday life better and exciting.\n</p>\n\n*/\n\n\n/*\n<div className=\"has-text-centered\">\n<Link to=\"/\">Home</Link>\n</div>\n*/","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nconst ListLink = props => (\n    <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n        <Link to={props.to}>{props.children}</Link>\n    </li>\n)\n\nconst Navigation = () => (\n    <ul style={{ listStyle: `none`, float: `right` }}>\n        <ListLink to=\"/\">About</ListLink>\n        <ListLink to=\"projects/\">Projects</ListLink>\n        <ListLink to=\"publications/\">Publications</ListLink>\n        <ListLink to=\"mentoring/\">Mentorship/Teaching</ListLink>\n        <ListLink to=\"service/\">Service</ListLink>\n        <ListLink to=\"presentations/\">Presentations</ListLink>\n    </ul>\n)\n\n\nexport default Navigation\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n//import profilePhoto from \"../images/Pei-Yao_Hung.jpg\";\nimport Navigatioon from \"./navigation\";\n\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\n//\"/images/Pei-Yao_Hung.jpg\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      //background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <div className=\"media\">\n        <figure className=\"media-left image is-128x128\">\n          <img src={\"/images/Pei-Yao_Hung.jpg\"} />\n        </figure>\n        <div className=\"media-content\">\n          <div className=\"is-size-4  is-size-5-mobile\">Pei-Yao Hung</div>\n          <div className=\"is-size-6\">HCI Researcher</div>\n          <h2 style={{ display: \"none\" }}>Researcher and Builder</h2>\n          <p style={{ display: \"none\" }}>Empower People with Information and Smart Environment</p>\n          <a href=\"mailto:peiyaoh@umich.edu\">peiyaoh@umich.edu</a>\n          <br />\n          <span className=\"icon\">\n            <a href=\"https://twitter.com/peiyaoh\" target=\"_blank\">\n              <i className=\"fab fa-twitter fa-lg\"></i>\n            </a>\n          </span>\n          &nbsp;&nbsp;\n          <span className=\"icon\">\n          <a href=\"https://github.com/peiyaoh\" target=\"_blank\">\n              <i className=\"fab fa-github fa-lg\"></i>\n            </a>\n          </span>\n          &nbsp;&nbsp;\n          <span className=\"icon\">\n          <a href=\"https://www.linkedin.com/in/peiyaoh/\" target=\"_blank\">\n              <i className=\"fab fa-linkedin fa-lg\"></i>\n            </a>\n          </span>\n          <br />\n          <a href=\"/files/Hung_Pei-Yao_Resume.pdf\" target=\"_blank\">Resume</a>, <a href=\"/files/Hung_Pei-Yao_CV.pdf\" target=\"_blank\">C.V.</a>, <a href=\"https://scholar.google.com/citations?user=BEE9_SwAAAAJ\"\n            target=\"_blank\">Google Scholar</a>\n        </div>\n      </div>\n      <hr />\n      <div className=\"is-pull-right\">\n        <Navigatioon></Navigatioon>\n\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n\n\n/*\n<ul style={{ listStyle: `none`, float: `right` }}>\n<ListLink to=\"/\">Home</ListLink>\n<ListLink to=\"/publications/\">Publications</ListLink>\n<ListLink to=\"/projects/\">Projects</ListLink>\n<ListLink to=\"/mentoring/\">Teaching/Mentoring</ListLink>\n<ListLink to=\"/services/\">Services</ListLink>\n</ul>\n*/","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Navigation from \"./navigation\";\n\n//import \"./layout.css\"\n\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <br />\n        \n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <Navigation></Navigation>\n          <br />\n        </div>\n        <footer>\n          <br />\n          <div className=\"content has-text-centered\">\n            Built with{` `}<span className=\"icon\">\n            <i className=\"far fa-smile-wink\"></i>\n          </span>\n          </div>\n          <br />\n        </footer>\n      </>\n    )}\n  />\n)\n\n//&copy; {new Date().getFullYear()} by Pei-Yao Hung, \n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n\n\n// <a href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a>","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { projectInfoList } from \"../contents/project-info\";\n/*\nimport projectSCIPhoto from \"../images/project/livingroom_by_tylerkaraszewski@Flickr.jpg\";\nimport projectSISPhoto from \"../images/project/cristina-gottardi-227407-unsplash.jpg\";\nimport projectLinkrPhoto from \"../images/project/programmer_hackathon_hackny.jpg\";\nimport projectCuttingGamePhoto from \"../images/project/CuttingGame_600x250.jpg\";\n*/\n/*\nconst projectTupleList = [];\nlet tuple = [];\n\nfor (let i = 0; i < projectInfoList.length; i++) {\n\n    let index = i % 2;\n    tuple.push(projectInfoList[i]);\n\n    if (index == 1) {\n        projectTupleList.push(tuple);\n        tuple = [];\n    }\n}\n\nif (tuple.length > 0) {\n    while (tuple.length < 2) {\n        tuple.push(null);\n    }\n    projectTupleList.push(tuple);\n}\n*/\n\n//  \n\nconst ProjectSelection = ({ description }) => (\n    <div className=\"content has-text-justified\">\n        {description != undefined ? <Fragment>{description} <hr /></Fragment> : null}\n        <div className=\"columns is-multiline is-4\">\n                {\n                    projectInfoList.map((projectInfo, index) => {\n                        return <div key={index} className=\"column is-half\">\n                        <Link to={projectInfo.details_link}>\n                        <div className=\"box\" style={{width: \"100%\", height: \"100%\"}}>\n                            <div className=\"is-size-5  is-size-6-mobile has-text-weight-semibold\">\n                                {projectInfo.title}\n                            </div>\n                            <br />\n                            <div className=\"image\">\n                                \n                                    <img src={projectInfo.image_info.link} />\n                                \n                                \n                            </div>\n                            <br />\n                            <div className=\"tags is-hidden\">\n                                {\n                                    projectInfo.topic_list.map((topic, indexT) => {\n                                        return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                                    })\n                                }\n                            </div>\n                        </div>\n                        </Link>\n                    </div>\n                    })\n                }\n            </div>\n        <hr />\n    </div >\n)\n\nexport default ProjectSelection\n\n// caption\n/*\n<figcaption style={{ textAlign: \"center\" }} className=\"is-hidden\">\n                                    <a href={projectInfo.image_info.original_link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.caption}</a>\n                                    <a href={projectInfo.image_info.license_info.link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.license_info.text}</a>\n                                </figcaption>\n*/\n\n\n// manul calculation of multi-column\n\n\n/*\n{\n    projectTupleList.map((tupleInfo, index) => {\n        return <div key={index}>\n            <div className=\"columns\" >\n                {\n                    tupleInfo.map((projectInfo, indexP) => {\n                        return projectInfo == null ?\n                            <div className=\"column\"></div> :\n                            <div className=\"column\">\n\n                                <p className=\"is-size-5  is-size-6-mobile has-text-weight-semibold\">{projectInfo.title}</p>\n\n                                <div className=\"image\">\n                                    <Link to={projectInfo.details_link}>\n                                        <img src={projectInfo.image_info.link} />\n                                    </Link>\n                                    <figcaption style={{ textAlign: \"center\" }}>\n                                        <a href={projectInfo.image_info.original_link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.caption}</a>\n                                        <a href={projectInfo.image_info.license_info.link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.license_info.text}</a>\n                                    </figcaption>\n                                </div>\n                                <br />\n                                <div className=\"tags\">\n                                    {\n                                        projectInfo.topic_list.map((topic, indexT) => {\n                                            return <span className=\"tag\" key={indexT}>{topic}</span>\n                                        })\n                                    }\n                                </div>\n                            </div>\n                    })\n                }\n            </div>\n            <hr />\n        </div>;\n    })\n}\n*/\n\n// original design\n/*\n<div className=\"columns\" >\n<div className=\"column\">\n\n    <div className=\"image\">\n        <Link to={projectInfo.details_link}>\n            <img src={projectInfo.image_info.link} />\n        </Link>\n        <figcaption style={{ textAlign: \"center\" }}>\n            <a href={projectInfo.image_info.original_link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.caption}</a>\n            <a href={projectInfo.image_info.license_info.link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.license_info.text}</a>\n        </figcaption>\n    </div>\n\n    <br />\n\n</div>\n<div className=\"column\">\n    <p className=\"is-size-5  is-size-6-mobile has-text-weight-semibold\">{projectInfo.title}</p>\n    <p>\n        {projectInfo.description}\n    </p>\n    <p>Status: {projectInfo.status}</p>\n    <Link to={projectInfo.details_link}>Details</Link>\n</div>\n</div>\n<div>\n<div className=\"tags\">\n    {\n        projectInfo.topic_list.map((topic, indexT) => {\n            return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n        })\n    }\n</div>\n</div>\n<hr />\n*/\n\n// single coolumn\n/*\nprojectInfoList.map((projectInfo, index) => {\n    return <Fragment key={index}>\n        <div className=\"columns\" >\n            <div className=\"column\">\n                <Link to={projectInfo.details_link}>\n                <div className=\"image\">\n                    <img src={projectInfo.image_info.link} />\n                    <figcaption style={{ textAlign: \"center\" }}>\n                        <a href={projectInfo.image_info.original_link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.caption}</a>\n                        <a href={projectInfo.image_info.license_info.link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.license_info.text}</a>\n                    </figcaption>\n                </div>\n                </Link>\n                <br />\n                <div>\n                <div className=\"tags\">\n                {\n                    projectInfo.topic_list.map((topic, indexT) => {\n                        return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                    })\n                }\n                </div>\n                </div>\n            </div>\n            <div className=\"column\">\n                <p className=\"is-size-5 has-text-weight-semibold\">{projectInfo.title}</p>\n                <p>\n                    {projectInfo.description}\n                </p>\n                <p>Status: {projectInfo.status}</p>\n                <Link to={projectInfo.details_link}>Details</Link>\n            </div>\n        </div>\n        <hr />\n    </Fragment>;\n})\n\n*/\n\n\n// Try tile\n/*\n<div className=\"tile is-ancestor is-12  is-horizontal\">\n{\n    projectInfoList.map((projectInfo, index) => {\n        return <div className=\"tile is-6 box\" key={index} >\n            <br />\n            <Link to={projectInfo.details_link}>\n                <div className=\"image\" style={{ height: 300 }}>\n                    <img src={projectInfo.image_info.link} />\n                    <figcaption style={{ textAlign: \"center\" }}>\n                        <a href={projectInfo.image_info.original_link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.caption}</a>\n                        <a href={projectInfo.image_info.license_info.link} target=\"_blank\" rel=\"noopener noreferrer\">{projectInfo.image_info.license_info.text}</a>\n                    </figcaption>\n                </div>\n                <br />\n                <br />\n                <p className=\"is-size-5 has-text-weight-semibold\" style={{ height: 50 }}>{projectInfo.title}</p>\n                <div className=\"tags\">\n                    {\n                        projectInfo.topic_list.map((topic, indexT) => {\n                            return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                        })\n                    }\n                </div>\n            </Link>\n\n            <br />\n        </div>;\n    })\n}\n</div>\n*/"],"sourceRoot":""}