{"version":3,"sources":["webpack:///./src/components/publication-selection.js","webpack:///./src/templates/project-details.js","webpack:///./src/components/publication-item.js"],"names":["PublicationSelection","publicationFilterFunction","projectFilterFunction","className","publicationInfoList","filter","sort","pubA","pubB","year","map","publication","index","key","post","data","markdownRemark","projectInfo","projectInfoList","pub","project_tag","frontmatter","keyword_list","concat","role_list","method_list","skill_list","topic_list","collaborator_list","title","keywords","undefined","introduction","join","length","topic","indexT","summary","comment_list","comment","dangerouslySetInnerHTML","__html","html","tags","indexOf","name","id","style","height","query","PublicationItem","category","text","links","item","indexI","link","href","target","rel","label"],"mappings":"8FAAA,6DAuBeA,IAjBc,SAAC,GAAD,IAAyBC,EAAzB,EAAEC,sBAAF,OACzB,yBAAKC,UAAU,WACX,yBAAKA,UAAU,8BAEPC,IAAoBC,OAAOJ,GAA2BK,MAAK,SAACC,EAAMC,GAAU,OAAOA,EAAKC,KAAOF,EAAKE,QAAQC,KAAI,SAACC,EAAaC,GAC1H,OAAO,yBAAKC,IAAKD,GACb,kBAAC,IAAD,CAAiBD,YAAaA,IAC9B,6BACA,qC,oCCdxB,8IAmBe,sBAAe,IACtBG,EADqB,EAAXC,KACEC,eAEdC,EAAcC,IAAgBb,QAAO,SAACc,GAAU,OAAOA,EAAIC,aAAeN,EAAKO,YAAYD,eAAgB,GAiB3GE,EAXqB,CAAC,eAAgB,6BAA8B,MAAO,kBAAmB,KAAM,YAWlEC,OAAON,EAAYO,WAAWD,OAAON,EAAYQ,aAAaF,OAAON,EAAYS,YAAYH,OAAON,EAAYU,YAAYJ,OAAON,EAAYW,mBAGrL,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKC,MAAOZ,EAAYY,MAAOC,SAAUR,IACzC,6BACE,wBAAInB,UAAU,8BAA8Bc,EAAYY,OACxD,6BACA,yBAAK1B,UAAU,8BACgB4B,MAA5Bd,EAAYe,aACb,yBAAK7B,UAAU,QACZc,EAAYe,aAAa,8BAE1B,KAEF,yBAAK7B,UAAU,OACb,yBAAKA,UAAU,iBACf,0CACEc,EAAYO,UAAUS,KAAK,OAG7B,2BACEhB,EAAYW,kBAAkBM,OAAS,EAAI,kBAAC,WAAD,yBAEvCjB,EAAYW,kBAAkBK,KAAK,OAEzB,OAIlB,6BACA,yBAAK9B,UAAU,WACb,yBAAKA,UAAU,UAAf,aAEE,yBAAKA,UAAU,QAEXc,EAAYQ,YAAYf,KAAI,SAACyB,EAAOC,GAClC,OAAO,0BAAMjC,UAAU,gBAAgBU,IAAKuB,GAASD,QAO7D,yBAAKhC,UAAU,UAAf,YACA,yBAAKA,UAAU,QAETc,EAAYS,WAAWhB,KAAI,SAACyB,EAAOC,GACjC,OAAO,0BAAMjC,UAAU,gBAAgBU,IAAKuB,GAASD,UAO/D,6BAAMlB,EAAYoB,SAClB,6BAG8BN,MAA5Bd,EAAYqB,aAA4BrB,EAAYqB,aAAa5B,KAAI,SAAC6B,EAAS3B,GAAY,OAAO,uBAAGC,IAAKD,GAAQ2B,MAAkB,MAGxI,yBAAKC,wBAAyB,CAAEC,OAAQ3B,EAAK4B,SAG7CtC,IAAoBC,QAAO,SAACc,GAAU,OAAOA,EAAIwB,KAAKC,QAAQ9B,EAAKO,YAAYD,cAAgB,KAAMc,OAAS,EAC5G,kBAAC,WAAD,KACE,wBAAI/B,UAAU,8BAA8B0C,KAAK,eAAeC,GAAG,gBAAnE,gBACA,yBAAKC,MAAO,CAACC,OAAQ,MACrB,kBAAC,IAAD,CAAsB9C,sBAAuB,SAACiB,GAAS,OAAOA,EAAIwB,KAAKC,QAAQ9B,EAAKO,YAAYD,cAAgB,MACpG,KAElB,+BAKC,IAAM6B,EAAK,a,kCCtHlB,6CAqBeC,IAjBS,SAAC,GAAD,IAAGvC,EAAH,EAAGA,YAAH,OACpB,kBAAC,WAAD,KAC6B,iBAAxBA,EAAYwC,SAA8B,mBAAqB,KAAMxC,EAAYyC,KADtF,KAGQzC,EAAY0C,MAAM3C,KAAI,SAAC4C,EAAMC,GACzB,OAAO,kBAAC,WAAD,CAAU1C,IAAK0C,GAEdD,EAAKE,KAAKZ,QAAQ,SAAW,EAAI,kBAAC,WAAD,KAAU,uBAAGa,KAAMH,EAAKE,KAAME,OAAO,SAASC,IAAI,uBAAuBL,EAAKM,QAC3G,kBAAC,WAAD,SAAW,uBAAGH,KAAMH,EAAKE,KAAME,OAAO,SAASC,IAAI,uBAAuBL,EAAKM,OAA/E","file":"component---src-templates-project-details-js-ca7a96ffee0feb1658d8.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport {publicationInfoList} from \"../contents/publication-info\";\nimport PublicationItem from \"./publication-item\";\n\n// (pub) => {return pub.tags.indexOf(projectTag) >= 0;}\nconst PublicationSelection = ({projectFilterFunction: publicationFilterFunction}) => (\n    <div className=\"content\">\n        <div className=\"content has-text-justified\">\n        {\n                publicationInfoList.filter(publicationFilterFunction).sort((pubA, pubB) => {return pubB.year - pubA.year;}).map((publication, index) => {\n                    return <div key={index}>\n                        <PublicationItem publication={publication}></PublicationItem>\n                        <br />\n                        <br />\n                    </div>\n                })\n            }\n\n        </div>\n    </div>\n)\n\nexport default PublicationSelection","import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link } from \"gatsby\"\nimport PublicationSelection from \"../components/publication-selection\";\nimport { publicationInfoList } from \"../contents/publication-info\";\nimport { projectInfoList } from \"../contents/project-info\";\n\nlet bulmaCarouselScript = `<script>\nbulmaCarousel.attach('#carousel-demo', {\n    slidesToScroll: 4,\n    slidesToShow: 4\n});\n</script>`;\n\n\n\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n\n  let projectInfo = projectInfoList.filter((pub) => { return pub.project_tag == post.frontmatter.project_tag; })[0];\n\n  //<div className=\"is-size-4\">Summary</div>\n\n  // <SEO title={post.frontmatter.title} keywords={post.frontmatter.keywords} />\n\n  let basic_keyword_list = [\"Pei-Yao Hung\", \"Human-Computer Interaction\", \"HCI\", \"user experience\", \"UX\", \"research\"];\n\n  /*\n  role_list\n  collaborator_list\n  method_list\n  skill_ist\n  topic_list\n  */\n\n\n  let keyword_list = basic_keyword_list.concat(projectInfo.role_list).concat(projectInfo.method_list).concat(projectInfo.skill_list).concat(projectInfo.topic_list).concat(projectInfo.collaborator_list);\n\n\n  return (\n    <Layout>\n\n      <SEO title={projectInfo.title} keywords={keyword_list} />\n      <div>\n        <h1 className=\"is-size-3 is-size-4-mobile\">{projectInfo.title}</h1>\n        <hr />\n        <div className=\"content has-text-justified\">\n          {projectInfo.introduction != undefined? \n          <div className=\"hero\">\n            {projectInfo.introduction}<br />\n          </div>\n          : null}\n          \n          <div className=\"box\">\n            <div className=\"has-text-left\">\n            <p>My role(s): {\n              projectInfo.role_list.join(\", \")\n            }\n            </p>\n            <p>{\n              projectInfo.collaborator_list.length > 0 ? <Fragment>\n                Collaborator(s): {\n                  projectInfo.collaborator_list.join(\", \")\n                }\n              </Fragment> : null\n            }\n            </p>\n            </div>\n          <hr />\n          <div className=\"columns\">\n            <div className=\"column\">Method(s):\n\n              <div className=\"tags\">\n                {\n                  projectInfo.method_list.map((topic, indexT) => {\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                  })\n                }\n              </div>\n\n\n            </div>\n            <div className=\"column\">Skill(s):\n            <div className=\"tags\">\n                {\n                  projectInfo.skill_list.map((topic, indexT) => {\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                  })\n                }\n              </div>\n            </div>\n          </div>\n          </div>\n          <div>{projectInfo.summary}</div>\n          <br />\n\n          {\n            projectInfo.comment_list != undefined ? projectInfo.comment_list.map((comment, index) => { return <p key={index}>{comment}</p> }) : null\n          }\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n      {\n        publicationInfoList.filter((pub) => { return pub.tags.indexOf(post.frontmatter.project_tag) >= 0; }).length > 0 ?\n          <Fragment>\n            <h3 className=\"is-size-4  is-size-5-mobile\" name=\"publications\" id=\"publications\">Publications</h3>\n            <div style={{height: 20}}></div>\n            <PublicationSelection projectFilterFunction={(pub) => {return pub.tags.indexOf(post.frontmatter.project_tag) >= 0;}}></PublicationSelection>\n          </Fragment> : null\n      }\n      <br />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        keywords\n        project_tag\n      }\n    }\n  }\n`\n\n\n\n\n/*\n{\n              projectInfo.skill_list.join(\", \")\n            }\n{\n  projectInfo.method_list.join(\", \")\n}\n*/","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport { publicationInfoList } from \"../contents/publication-info\";\n\nconst PublicationItem = ({ publication }) => (\n    <Fragment>\n        {publication.category == \"in_submission\" ? \"[In submission] \" : null}{publication.text}.&nbsp;\n        {\n            publication.links.map((item, indexI) => {\n                return <Fragment key={indexI}>\n                    {\n                        item.link.indexOf(\".pdf\") >= 0 ? <Fragment><a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a></Fragment> :\n                            <Fragment>[<a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a>]</Fragment>\n                    }\n                </Fragment>\n            })\n        }\n    </Fragment>\n\n)\n\nexport default PublicationItem"],"sourceRoot":""}