{"version":3,"sources":["webpack:///./src/components/publication-selection.js","webpack:///./src/templates/project-details.js","webpack:///./src/components/publication-item.js"],"names":["PublicationSelection","publicationFilterFunction","projectFilterFunction","className","publicationInfoList","filter","sort","pubA","pubB","year","map","publication","index","key","post","data","markdownRemark","projectInfo","projectInfoList","pub","project_tag","frontmatter","keyword_list","concat","role_list","method_list","skill_list","topic_list","collaborator_list","title","keywords","route","details_link","undefined","introduction","join","length","topic","indexT","summary","comment_list","comment","dangerouslySetInnerHTML","__html","html","tags","indexOf","name","id","style","height","query","PublicationItem","category","text","links","item","indexI","link","href","target","rel","label"],"mappings":"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","file":"component---src-templates-project-details-js-f7cac0da10ee4a6ce82f.js","sourcesContent":["import React, { Fragment } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport {publicationInfoList} from \"../contents/publication-info\";\r\nimport PublicationItem from \"./publication-item\";\r\n\r\n// (pub) => {return pub.tags.indexOf(projectTag) >= 0;}\r\nconst PublicationSelection = ({projectFilterFunction: publicationFilterFunction}) => (\r\n    <div className=\"content\">\r\n        <div className=\"content has-text-justified\">\r\n        {\r\n                publicationInfoList.filter(publicationFilterFunction).sort((pubA, pubB) => {return pubB.year - pubA.year;}).map((publication, index) => {\r\n                    return <div key={index}>\r\n                        <PublicationItem publication={publication}></PublicationItem>\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default PublicationSelection","import React, { Fragment } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Link } from \"gatsby\"\r\nimport PublicationSelection from \"../components/publication-selection\";\r\nimport { publicationInfoList } from \"../contents/publication-info\";\r\nimport { projectInfoList } from \"../contents/project-info\";\r\n\r\nlet bulmaCarouselScript = `<script>\r\nbulmaCarousel.attach('#carousel-demo', {\r\n    slidesToScroll: 4,\r\n    slidesToShow: 4\r\n});\r\n</script>`;\r\n\r\n\r\n\r\n\r\nexport default ({ data }) => {\r\n  const post = data.markdownRemark;\r\n\r\n  let projectInfo = projectInfoList.filter((pub) => { return pub.project_tag == post.frontmatter.project_tag; })[0];\r\n\r\n  //<div className=\"is-size-4\">Summary</div>\r\n\r\n  // <SEO title={post.frontmatter.title} keywords={post.frontmatter.keywords} />\r\n\r\n  let basic_keyword_list = [\"Pei-Yao Hung\", \"Human-Computer Interaction\", \"HCI\", \"user experience\", \"UX\", \"research\"];\r\n\r\n  /*\r\n  role_list\r\n  collaborator_list\r\n  method_list\r\n  skill_ist\r\n  topic_list\r\n  */\r\n\r\n\r\n  let keyword_list = basic_keyword_list.concat(projectInfo.role_list).concat(projectInfo.method_list).concat(projectInfo.skill_list).concat(projectInfo.topic_list).concat(projectInfo.collaborator_list);\r\n\r\n\r\n  return (\r\n    <Layout>\r\n\r\n      <SEO title={projectInfo.title} keywords={keyword_list} route={projectInfo.details_link}/>\r\n      <div>\r\n        <h1 className=\"is-size-3 is-size-4-mobile\">{projectInfo.title}</h1>\r\n        <hr />\r\n        <div className=\"content has-text-justified\">\r\n          {projectInfo.introduction != undefined? \r\n          <div className=\"hero\">\r\n            {projectInfo.introduction}<br />\r\n          </div>\r\n          : null}\r\n          \r\n          <div className=\"box\">\r\n            <div className=\"has-text-left\">\r\n            <p>My role(s): {\r\n              projectInfo.role_list.join(\", \")\r\n            }\r\n            </p>\r\n            <p>{\r\n              projectInfo.collaborator_list.length > 0 ? <Fragment>\r\n                Collaborator(s): {\r\n                  projectInfo.collaborator_list.join(\", \")\r\n                }\r\n              </Fragment> : null\r\n            }\r\n            </p>\r\n            </div>\r\n          <hr />\r\n          <div className=\"columns\">\r\n            <div className=\"column\">Method(s):\r\n\r\n              <div className=\"tags\">\r\n                {\r\n                  projectInfo.method_list.map((topic, indexT) => {\r\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\r\n                  })\r\n                }\r\n              </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"column\">Skill(s):\r\n            <div className=\"tags\">\r\n                {\r\n                  projectInfo.skill_list.map((topic, indexT) => {\r\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div>{projectInfo.summary}</div>\r\n          <br />\r\n\r\n          {\r\n            projectInfo.comment_list != undefined ? projectInfo.comment_list.map((comment, index) => { return <p key={index}>{comment}</p> }) : null\r\n          }\r\n        </div>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n      </div>\r\n      {\r\n        publicationInfoList.filter((pub) => { return pub.tags.indexOf(post.frontmatter.project_tag) >= 0; }).length > 0 ?\r\n          <Fragment>\r\n            <h3 className=\"is-size-4  is-size-5-mobile\" name=\"publications\" id=\"publications\">Publications</h3>\r\n            <div style={{height: 20}}></div>\r\n            <PublicationSelection projectFilterFunction={(pub) => {return pub.tags.indexOf(post.frontmatter.project_tag) >= 0;}}></PublicationSelection>\r\n          </Fragment> : null\r\n      }\r\n      <br />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date\r\n        keywords\r\n        project_tag\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\n\r\n/*\r\n{\r\n              projectInfo.skill_list.join(\", \")\r\n            }\r\n{\r\n  projectInfo.method_list.join(\", \")\r\n}\r\n*/","import React, { Fragment } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { publicationInfoList } from \"../contents/publication-info\";\r\n\r\nconst PublicationItem = ({ publication }) => (\r\n    <Fragment>\r\n        {publication.category == \"in_submission\" ? \"[In submission] \" : null}{publication.text}.&nbsp;\r\n        {\r\n            publication.links.map((item, indexI) => {\r\n                return <Fragment key={indexI}>\r\n                    {\r\n                        item.link.indexOf(\".pdf\") >= 0 ? <Fragment><a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a></Fragment> :\r\n                            <Fragment>[<a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a>]</Fragment>\r\n                    }\r\n                </Fragment>\r\n            })\r\n        }\r\n    </Fragment>\r\n\r\n)\r\n\r\nexport default PublicationItem"],"sourceRoot":""}