{"version":3,"sources":["webpack:///./src/templates/project-details.js"],"names":["post","data","markdownRemark","projectInfo","projectInfoList","filter","pub","project_tag","frontmatter","keyword_list","concat","role_list","method_list","skill_list","topic_list","collaborator_list","title","keywords","className","undefined","introduction","join","length","map","topic","indexT","key","summary","comment_list","comment","index","dangerouslySetInnerHTML","__html","html","publicationInfoList","tags","indexOf","name","projectTag","query"],"mappings":"8FAAA,8IAmBe,sBAAe,IACtBA,EADqB,EAAXC,KACEC,eAEdC,EAAcC,IAAgBC,QAAO,SAACC,GAAU,OAAOA,EAAIC,aAAeP,EAAKQ,YAAYD,eAAgB,GAiB3GE,EAXqB,CAAC,eAAgB,6BAA8B,MAAO,kBAAmB,KAAM,YAWlEC,OAAOP,EAAYQ,WAAWD,OAAOP,EAAYS,aAAaF,OAAOP,EAAYU,YAAYH,OAAOP,EAAYW,YAAYJ,OAAOP,EAAYY,mBAGrL,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKC,MAAOb,EAAYa,MAAOC,SAAUR,IACzC,6BACE,wBAAIS,UAAU,8BAA8Bf,EAAYa,OACxD,6BACA,yBAAKE,UAAU,8BACgBC,MAA5BhB,EAAYiB,aACb,yBAAKF,UAAU,QACZf,EAAYiB,aAAa,8BAE1B,KAEF,yBAAKF,UAAU,OACb,yBAAKA,UAAU,iBACf,0CACEf,EAAYQ,UAAUU,KAAK,OAG7B,2BACElB,EAAYY,kBAAkBO,OAAS,EAAI,kBAAC,WAAD,yBAEvCnB,EAAYY,kBAAkBM,KAAK,OAEzB,OAIlB,6BACA,yBAAKH,UAAU,WACb,yBAAKA,UAAU,UAAf,aAEE,yBAAKA,UAAU,QAEXf,EAAYS,YAAYW,KAAI,SAACC,EAAOC,GAClC,OAAO,0BAAMP,UAAU,gBAAgBQ,IAAKD,GAASD,QAO7D,yBAAKN,UAAU,UAAf,YACA,yBAAKA,UAAU,QAETf,EAAYU,WAAWU,KAAI,SAACC,EAAOC,GACjC,OAAO,0BAAMP,UAAU,gBAAgBQ,IAAKD,GAASD,UAO/D,6BAAMrB,EAAYwB,SAClB,6BAG8BR,MAA5BhB,EAAYyB,aAA4BzB,EAAYyB,aAAaL,KAAI,SAACM,EAASC,GAAY,OAAO,uBAAGJ,IAAKI,GAAQD,MAAkB,MAGxI,yBAAKE,wBAAyB,CAAEC,OAAQhC,EAAKiC,SAG7CC,IAAoB7B,QAAO,SAACC,GAAU,OAAOA,EAAI6B,KAAKC,QAAQpC,EAAKQ,YAAYD,cAAgB,KAAMe,OAAS,EAC5G,kBAAC,WAAD,KACE,wBAAIJ,UAAU,8BAA8BmB,KAAK,gBAAjD,gBACA,kBAAC,IAAD,CAAsBC,WAAYtC,EAAKQ,YAAYD,eACvC,KAElB,+BAKC,IAAMgC,EAAK","file":"component---src-templates-project-details-js-9d41bdf3c23f9d52e28f.js","sourcesContent":["import React, { Fragment } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Link } from \"gatsby\"\r\nimport PublicationSelection from \"../components/publication-selection\";\r\nimport { publicationInfoList } from \"../contents/publication-info\";\r\nimport { projectInfoList } from \"../contents/project-info\";\r\n\r\nlet bulmaCarouselScript = `<script>\r\nbulmaCarousel.attach('#carousel-demo', {\r\n    slidesToScroll: 4,\r\n    slidesToShow: 4\r\n});\r\n</script>`;\r\n\r\n\r\n\r\n\r\nexport default ({ data }) => {\r\n  const post = data.markdownRemark;\r\n\r\n  let projectInfo = projectInfoList.filter((pub) => { return pub.project_tag == post.frontmatter.project_tag; })[0];\r\n\r\n  //<div className=\"is-size-4\">Summary</div>\r\n\r\n  // <SEO title={post.frontmatter.title} keywords={post.frontmatter.keywords} />\r\n\r\n  let basic_keyword_list = [\"Pei-Yao Hung\", \"Human-Computer Interaction\", \"HCI\", \"user experience\", \"UX\", \"research\"];\r\n\r\n  /*\r\n  role_list\r\n  collaborator_list\r\n  method_list\r\n  skill_ist\r\n  topic_list\r\n  */\r\n\r\n\r\n  let keyword_list = basic_keyword_list.concat(projectInfo.role_list).concat(projectInfo.method_list).concat(projectInfo.skill_list).concat(projectInfo.topic_list).concat(projectInfo.collaborator_list);\r\n\r\n\r\n  return (\r\n    <Layout>\r\n\r\n      <SEO title={projectInfo.title} keywords={keyword_list} />\r\n      <div>\r\n        <h1 className=\"is-size-3 is-size-4-mobile\">{projectInfo.title}</h1>\r\n        <hr />\r\n        <div className=\"content has-text-justified\">\r\n          {projectInfo.introduction != undefined? \r\n          <div className=\"hero\">\r\n            {projectInfo.introduction}<br />\r\n          </div>\r\n          : null}\r\n          \r\n          <div className=\"box\">\r\n            <div className=\"has-text-left\">\r\n            <p>My role(s): {\r\n              projectInfo.role_list.join(\", \")\r\n            }\r\n            </p>\r\n            <p>{\r\n              projectInfo.collaborator_list.length > 0 ? <Fragment>\r\n                Collaborator(s): {\r\n                  projectInfo.collaborator_list.join(\", \")\r\n                }\r\n              </Fragment> : null\r\n            }\r\n            </p>\r\n            </div>\r\n          <hr />\r\n          <div className=\"columns\">\r\n            <div className=\"column\">Method(s):\r\n\r\n              <div className=\"tags\">\r\n                {\r\n                  projectInfo.method_list.map((topic, indexT) => {\r\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\r\n                  })\r\n                }\r\n              </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"column\">Skill(s):\r\n            <div className=\"tags\">\r\n                {\r\n                  projectInfo.skill_list.map((topic, indexT) => {\r\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div>{projectInfo.summary}</div>\r\n          <br />\r\n\r\n          {\r\n            projectInfo.comment_list != undefined ? projectInfo.comment_list.map((comment, index) => { return <p key={index}>{comment}</p> }) : null\r\n          }\r\n        </div>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n      </div>\r\n      {\r\n        publicationInfoList.filter((pub) => { return pub.tags.indexOf(post.frontmatter.project_tag) >= 0; }).length > 0 ?\r\n          <Fragment>\r\n            <h3 className=\"is-size-5  is-size-6-mobile\" name=\"publications\">Publications</h3>\r\n            <PublicationSelection projectTag={post.frontmatter.project_tag}></PublicationSelection>\r\n          </Fragment> : null\r\n      }\r\n      <br />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date\r\n        keywords\r\n        project_tag\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\n\r\n/*\r\n{\r\n              projectInfo.skill_list.join(\", \")\r\n            }\r\n{\r\n  projectInfo.method_list.join(\", \")\r\n}\r\n*/"],"sourceRoot":""}