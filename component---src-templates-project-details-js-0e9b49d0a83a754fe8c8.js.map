{"version":3,"sources":["webpack:///./src/templates/project-details.js","webpack:///./src/components/publication-selection.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_publication_selection__WEBPACK_IMPORTED_MODULE_4__","_contents_publication_info__WEBPACK_IMPORTED_MODULE_5__","_contents_project_info__WEBPACK_IMPORTED_MODULE_6__","_ref","post","data","markdownRemark","projectInfo","projectInfoList","filter","pub","project_tag","frontmatter","keyword_list","concat","role_list","method_list","skill_list","topic_list","collaborator_list","a","createElement","title","keywords","className","undefined","introduction","join","length","map","topic","indexT","key","summary","comment_list","comment","index","dangerouslySetInnerHTML","__html","html","publicationInfoList","tags","indexOf","name","projectTag","PublicationSelection","react__WEBPACK_IMPORTED_MODULE_2___default","sort","pubA","pubB","year","publication","text","react__WEBPACK_IMPORTED_MODULE_2__","links","item","indexI","link","href","target","rel","label"],"mappings":"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","file":"component---src-templates-project-details-js-0e9b49d0a83a754fe8c8.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link } from \"gatsby\"\nimport PublicationSelection from \"../components/publication-selection\";\nimport { publicationInfoList } from \"../contents/publication-info\";\nimport { projectInfoList } from \"../contents/project-info\";\n\nlet bulmaCarouselScript = `<script>\nbulmaCarousel.attach('#carousel-demo', {\n    slidesToScroll: 4,\n    slidesToShow: 4\n});\n</script>`;\n\n\n\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n\n  let projectInfo = projectInfoList.filter((pub) => { return pub.project_tag == post.frontmatter.project_tag; })[0];\n\n  //<div className=\"is-size-4\">Summary</div>\n\n  // <SEO title={post.frontmatter.title} keywords={post.frontmatter.keywords} />\n\n  let basic_keyword_list = [\"Pei-Yao Hung\", \"Human-Computer Interaction\", \"HCI\", \"user experience\", \"UX\", \"research\"];\n\n  /*\n  role_list\n  collaborator_list\n  method_list\n  skill_ist\n  topic_list\n  */\n\n\n  let keyword_list = basic_keyword_list.concat(projectInfo.role_list).concat(projectInfo.method_list).concat(projectInfo.skill_list).concat(projectInfo.topic_list).concat(projectInfo.collaborator_list);\n\n\n  return (\n    <Layout>\n\n      <SEO title={projectInfo.title} keywords={keyword_list} />\n      <div>\n        <div className=\"is-size-3 is-size-4-mobile\">{projectInfo.title}</div>\n        <hr />\n        <div className=\"content has-text-justified\">\n          {projectInfo.introduction != undefined? \n          <div className=\"hero\">\n            {projectInfo.introduction}<br />\n          </div>\n          : null}\n          \n          <div className=\"box\">\n            <div className=\"has-text-left\">\n            <p>My role(s): {\n              projectInfo.role_list.join(\", \")\n            }\n            </p>\n            <p>{\n              projectInfo.collaborator_list.length > 0 ? <Fragment>\n                Collaborator(s): {\n                  projectInfo.collaborator_list.join(\", \")\n                }\n              </Fragment> : null\n            }\n            </p>\n            </div>\n          <hr />\n          <div className=\"columns\">\n            <div className=\"column\">Method(s):\n\n              <div className=\"tags\">\n                {\n                  projectInfo.method_list.map((topic, indexT) => {\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                  })\n                }\n              </div>\n\n\n            </div>\n            <div className=\"column\">Skill(s):\n            <div className=\"tags\">\n                {\n                  projectInfo.skill_list.map((topic, indexT) => {\n                    return <span className=\"tag is-medium\" key={indexT}>{topic}</span>\n                  })\n                }\n              </div>\n            </div>\n          </div>\n          </div>\n          <div>{projectInfo.summary}</div>\n          <br />\n\n          {\n            projectInfo.comment_list != undefined ? projectInfo.comment_list.map((comment, index) => { return <p key={index}>{comment}</p> }) : null\n          }\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n      {\n        publicationInfoList.filter((pub) => { return pub.tags.indexOf(post.frontmatter.project_tag) >= 0; }).length > 0 ?\n          <Fragment>\n            <div className=\"is-size-5  is-size-6-mobile\" name=\"publications\">Publications</div>\n            <PublicationSelection projectTag={post.frontmatter.project_tag}></PublicationSelection>\n          </Fragment> : null\n      }\n      <br />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        keywords\n        project_tag\n      }\n    }\n  }\n`\n\n\n\n\n/*\n{\n              projectInfo.skill_list.join(\", \")\n            }\n{\n  projectInfo.method_list.join(\", \")\n}\n*/","import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport {publicationInfoList} from \"../contents/publication-info\";\n\nconst PublicationSelection = ({projectTag}) => (\n    <div className=\"content\">\n        <div className=\"content has-text-justified\">\n        {\n                publicationInfoList.filter((pub) => {return pub.tags.indexOf(projectTag) >= 0;}).sort((pubA, pubB) => {return pubB.year - pubA.year;}).map((publication, index) => {\n                    return <p key={index}>\n                        {publication.text}.&nbsp;\n                        <Fragment>\n                            {\n                                publication.links.map((item, indexI) => {\n                                    return <Fragment key={indexI}>\n                                    {\n                                        item.link.indexOf(\".pdf\") >= 0 ? <Fragment><a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a></Fragment> :\n                                        <Fragment>[<a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">{item.label}</a>]</Fragment>\n                                    } \n                                    </Fragment>\n                                })\n                            }\n                        </Fragment>\n                    </p>\n                })\n            }\n\n        </div>\n    </div>\n)\n\nexport default PublicationSelection"],"sourceRoot":""}